{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Argy\\\\Desktop\\\\repos\\\\food-order-app\\\\src\\\\store\\\\CardProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  item: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.item[existingCartItemIndex];\n    let updatedItem;\n    let updateItems;\n\n    if (existingCartItem) {\n      updatedItem = { ...existingCartItem\n      };\n    }\n\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Argy/Desktop/repos/food-order-app/src/store/CardProvider.js"],"names":["useReducer","CartContext","defaultCartState","item","totalAmount","cartReducer","state","action","type","existingCartItemIndex","items","findIndex","id","existingCartItem","updatedItem","updateItems","updatedItems","concat","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,IAAI,EAAE,EADiB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,qBAAqB,GAAGH,KAAK,CAACI,KAAN,CAAYC,SAAZ,CAC3BR,IAAD,IAAUA,IAAI,CAACS,EAAL,KAAYL,MAAM,CAACJ,IAAP,CAAYS,EADN,CAA9B;AAGA,UAAMC,gBAAgB,GAAGP,KAAK,CAACH,IAAN,CAAWM,qBAAX,CAAzB;AACA,QAAIK,WAAJ;AACA,QAAIC,WAAJ;;AAEA,QAAIF,gBAAJ,EAAsB;AACpBC,MAAAA,WAAW,GAAG,EACZ,GAAGD;AADS,OAAd;AAID;;AAED,UAAMG,YAAY,GAAGV,KAAK,CAACI,KAAN,CAAYO,MAAZ,CAAmBV,MAAM,CAACJ,IAA1B,CAArB;AACA,UAAMe,kBAAkB,GACtBZ,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACJ,IAAP,CAAYgB,KAAZ,GAAoBZ,MAAM,CAACJ,IAAP,CAAYiB,MADtD;AAEA,WAAO;AACLV,MAAAA,KAAK,EAAEM,YADF;AAELZ,MAAAA,WAAW,EAAEc;AAFR,KAAP;AAID;;AACD,SAAOhB,gBAAP;AACD,CAzBD;;AA2BA,MAAMmB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCxB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAIA,QAAMuB,oBAAoB,GAAItB,IAAD,IAAU;AACrCqB,IAAAA,kBAAkB,CAAC;AAAEhB,MAAAA,IAAI,EAAE,KAAR;AAAeL,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMuB,yBAAyB,GAAId,EAAD,IAAQ;AACxCY,IAAAA,kBAAkB,CAAC;AAAEhB,MAAAA,IAAI,EAAE,QAAR;AAAkBI,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMe,WAAW,GAAG;AAClBjB,IAAAA,KAAK,EAAEa,SAAS,CAACb,KADC;AAElBN,IAAAA,WAAW,EAAEmB,SAAS,CAACnB,WAFL;AAGlBwB,IAAAA,OAAO,EAAEH,oBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxBD;;GAAMT,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n  item: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingCartItem = state.item[existingCartItemIndex];\n    let updatedItem;\n    let updateItems;\n\n    if (existingCartItem) {\n      updatedItem = {\n        ...existingCartItem, \n        \n      }\n    }\n\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: 'ADD', item: item });\n  };\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: 'REMOVE', id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}